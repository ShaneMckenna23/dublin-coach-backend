{"version":3,"sources":["../src/server.js"],"names":["port","process","env","PORT","host","HOSTNAME","server","listen","console","log","handleExit","options","err","cleanup","actions","close","forEach","i","length","exit","stack","on","bind"],"mappings":";;AAAA;;;;;;AAEA,MAAMA,OAAOC,QAAQC,GAAR,CAAYC,IAAZ,IAAoB,IAAjC;AACA,MAAMC,OAAOH,QAAQC,GAAR,CAAYG,QAAZ,IAAwB,SAArC;;AAEA;AACA,MAAMC,SAAS,cAAIC,MAAJ,CAAWP,IAAX,EAAiBI,IAAjB,EAAuB,MAAM;AAC1CI,UAAQC,GAAR,CAAa,6CAA4CL,IAAK,IAAGJ,IAAK,GAAtE;AACD,CAFc,CAAf;;AAIA;AACA,SAASU,UAAT,CAAoBC,OAApB,EAA6BC,GAA7B,EAAkC;AAChC,MAAID,QAAQE,OAAZ,EAAqB;AACnB,UAAMC,UAAU,CAACR,OAAOS,KAAR,CAAhB;AACAD,YAAQE,OAAR,CAAgB,CAACD,KAAD,EAAQE,CAAR,KAAc;AAC5B,UAAI;AACFF,cAAM,MAAM;AACV,cAAIE,MAAMH,QAAQI,MAAR,GAAiB,CAA3B,EAA8BjB,QAAQkB,IAAR;AAC/B,SAFD;AAGD,OAJD,CAIE,OAAOP,GAAP,EAAY;AACZ,YAAIK,MAAMH,QAAQI,MAAR,GAAiB,CAA3B,EAA8BjB,QAAQkB,IAAR;AAC/B;AACF,KARD;AASD;AACD,MAAIP,GAAJ,EAASJ,QAAQC,GAAR,CAAYG,IAAIQ,KAAhB;AACT,MAAIT,QAAQQ,IAAZ,EAAkBlB,QAAQkB,IAAR;AACnB;;AAEDlB,QAAQoB,EAAR,CAAW,MAAX,EAAmBX,WAAWY,IAAX,CAAgB,IAAhB,EAAsB,EAAET,SAAS,IAAX,EAAtB,CAAnB;AACAZ,QAAQoB,EAAR,CAAW,QAAX,EAAqBX,WAAWY,IAAX,CAAgB,IAAhB,EAAsB,EAAEH,MAAM,IAAR,EAAtB,CAArB;AACAlB,QAAQoB,EAAR,CAAW,SAAX,EAAsBX,WAAWY,IAAX,CAAgB,IAAhB,EAAsB,EAAEH,MAAM,IAAR,EAAtB,CAAtB;AACAlB,QAAQoB,EAAR,CAAW,mBAAX,EAAgCX,WAAWY,IAAX,CAAgB,IAAhB,EAAsB,EAAEH,MAAM,IAAR,EAAtB,CAAhC","file":"server.js","sourcesContent":["import app from \"./app\";\n\nconst port = process.env.PORT || 8080;\nconst host = process.env.HOSTNAME || \"0.0.0.0\";\n\n// Launch Node.js server\nconst server = app.listen(port, host, () => {\n  console.log(`Node.js API server is listening on http://${host}:${port}/`);\n});\n\n// Shutdown Node.js app gracefully\nfunction handleExit(options, err) {\n  if (options.cleanup) {\n    const actions = [server.close];\n    actions.forEach((close, i) => {\n      try {\n        close(() => {\n          if (i === actions.length - 1) process.exit();\n        });\n      } catch (err) {\n        if (i === actions.length - 1) process.exit();\n      }\n    });\n  }\n  if (err) console.log(err.stack);\n  if (options.exit) process.exit();\n}\n\nprocess.on(\"exit\", handleExit.bind(null, { cleanup: true }));\nprocess.on(\"SIGINT\", handleExit.bind(null, { exit: true }));\nprocess.on(\"SIGTERM\", handleExit.bind(null, { exit: true }));\nprocess.on(\"uncaughtException\", handleExit.bind(null, { exit: true }));\n"]}